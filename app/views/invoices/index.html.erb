<div class="contextual">
  <% if !@query.new_record? && @query.editable_by?(User.current) %>
  <%= link_to l(:button_contacts_edit_query), edit_crm_query_path(@query, :object_type => "invoice"), :class => 'icon icon-edit' %>
  <%= link_to l(:button_contacts_delete_query), crm_query_path(@query, :object_type => "invoice"), :data => {:confirm => l(:text_are_you_sure)}, :method => :delete, :class => 'icon icon-del' %>
  <% end %>
  <% if User.current.allowed_to?({:controller => :invoices, :action => :new}, @project, :global => @project.blank?) %>
    <%= link_to l(:label_invoice_new), {:controller => :invoices, :action => :new, :project_id => @project || Invoice.allowed_target_projects.first}, :class => 'icon icon-add' %>
  <% end %>
  <% if Redmine::VERSION.to_s >= '4.1' && User.current.allowed_to?(:import_invoices, @project, :global => true) %>
    <%= link_to l(:button_import), new_invoices_import_path(:project_id => @project), :class => 'icon icon-import' %>
  <% end %>
</div>

<% html_title(@query.new_record? ? l(:label_invoice_plural) : @query.name) %>

<%= form_tag({ :controller => 'invoices', :action => 'index', :project_id => @project }, :method => :get, :id => 'query_form') do %>
  <%= hidden_field_tag 'set_filter', '1' %>
  <%= hidden_field_tag 'object_type', 'invoice' %>
  <script type="text/javascript">
    jQuery(function($) {
      // when the #search field changes
      $("#search").observe_field(2, function() {
        var form = $("#query_form"); // grab the form wrapping the search bar.
        var url = form.attr("action");
        form.find('[name="c[]"] option').each(function(i, elem){
          $(elem).attr('selected', true);
          $(elem).prop('selected', true);
        });
        var formData = form.serialize();

        form.find('[name="c[]"] option').each(function(i, elem){
          $(elem).attr('selected', false);
          $(elem).prop('selected', false);
        });
        $.get(url, formData, function(data) { // perform an AJAX get, the trailing function is what happens on successful get.
            console.log(data);
            $("#contact_list").html(data); // replace the "results" div with the result of action taken
        });
      });
    });
  </script>

  <h2>
    <%= @query.new_record? ? l(:label_invoice_plural) : h(@query.name)  %>
    <span class="live_search">
      <%= text_field_tag(:search, params[:search], :autocomplete => "off", :class => "live_search_field", :placeholder => l(:label_crm_contact_search) ) %>
    </span>
  </h2>

  <div id="query_form_content" class="hide-when-print">
    <fieldset id="filters" class="collapsible <%= @query.new_record? ? "" : "collapsed" %>">
      <legend onclick="toggleFieldset(this);" class="icon icon-<%= @query.new_record? ? "expanded icon-expended" : "collapsed" %>"><%= l(:label_filter_plural) %></legend>
      <div style="<%= @query.new_record? ? "" : "display: none;" %>">
        <%= render :partial => 'queries/filters', :locals => {:query => @query} %>
      </div>
    </fieldset>
    <fieldset class="collapsible collapsed">
      <legend onclick="toggleFieldset(this);" class="icon icon-collapsed"><%= l(:label_options) %></legend>
      <div style="display: none;">
        <table>
          <tr style="<%= 'display: none;' if invoices_list_style != 'list' %>">
            <td><%= l(:field_column_names) %></td>
            <td><%= render_query_columns_selection(@query) %></td>
          </tr>
          <tr>
          <% if invoices_list_style != 'list_board' %>
              <td><label for='group_by'><%= l(:field_group_by) %></label></td>
              <td><%= select_tag('group_by',
                                options_for_select(
                                  [[]] + @query.groupable_columns.collect {|c| [c.caption, c.name.to_s]},
                                  @query.group_by)
                        ) %></td>
          <% end %>
          <% if invoices_list_style == 'list_excerpt' %>
              <td><label for='sort'><%= l(:label_sort) %></label></td>
              <td><%= select_tag('sort',
                                options_for_select(
                                  [[]] +
                                  [[l(:field_contact_status), "status:asc"],
                                    [l(:field_due_date), "due_date:desc"],
                                    [l(:field_created_on), "created_at:desc"],
                                    [l(:field_updated_on), "updated_at:desc"]],
                                  params[:sort] || @query.sort_criteria.try(:first).try(:join, ':'))
                        ) %></td>
          <% end %>
          </tr>
          <tr>
            <td><label for='invoices_list_style'><%= l(:label_crm_list_partial_style) %></label></td>
            <td><%= select_tag('invoices_list_style', options_for_select(invoices_list_styles_for_select, invoices_list_style)) %></td>
          </tr>
        </table>
      </div>
    </fieldset>
  </div>
  <%= render :partial => "crm_calendars/buttons" if invoices_list_style == 'crm_calendars/crm_calendar' %>

  <p class="buttons hide-when-print">
    <%= link_to_function l(:button_apply), 'submit_query_form("query_form")', :class => 'icon icon-checked' %>
    <%= link_to l(:button_clear), { :set_filter => 1, :project_id => @project }, :class => 'icon icon-reload'  %>
    <% if @query.new_record? && User.current.allowed_to?(:save_invoices_queries, @project, :global => true) %>
        <%= link_to_function l(:button_save),
                            "$('#query_form').attr('action', '#{ @project ? new_project_crm_query_path(@project) : new_crm_query_path }'); submit_query_form('query_form')",
                            :class => 'icon icon-save' %>

    <% end %>
  </p>
<% end %>

<%= error_messages_for 'query' %>
<% if @query.valid? %>
  <div id="contact_list" class="invoice_list">
  <% if @invoices.empty? %>
    <p class="nodata"><%= l(:label_no_data) %></p>
  <% else %>
    <%= render :partial => invoices_list_style %>
    <span class="pagination"><%= pagination_links_full @invoices_pages, @invoices_count %></span>
  <% end %>
  </div>
  <% other_formats_links do |f| %>
      <%= f.link_to_with_query_parameters 'CSV', {}, :onclick => "showModal('csv-export-options', '350px'); return false;" %>
  <% end %>

  <div id="csv-export-options" style="display:none;">
    <h3 class="title"><%= l(:label_export_options, :export_format => 'CSV') %></h3>
    <%= form_tag({:controller => 'invoices', :action => 'index', :project_id => @project, :format => 'csv'}, :method => :get, :id => 'csv-export-form') do %>
    <%= query_as_hidden_field_tags(@query) %>
    <p>
      <label><%= radio_button_tag 'c[]', '', true %> <%= l(:description_selected_columns) %></label><br />
      <label><%= radio_button_tag 'c[]', 'all_inline' %> <%= l(:description_all_columns) %></label>
    </p>
    <% if @query.available_block_columns.any? %>
      <fieldset id="csv-export-block-columns">
        <legend>
          <%= toggle_checkboxes_link('#csv-export-block-columns input[type=checkbox]') %>
        </legend>
        <% @query.available_block_columns.each do |column| %>
          <label><%= check_box_tag 'c[]', column.name, @query.has_column?(column), :id => nil %> <%= column.caption %></label>
        <% end %>
      </fieldset>
    <% end %>
    <%= export_csv_encoding_select_tag %>
    <%= export_csv_separator_select_tag if respond_to?(:export_csv_separator_select_tag) %>
    <% if @invoices_count > Setting.issues_export_limit.to_i %>
    <p class="icon icon-warning">
      <%= l(:setting_issues_export_limit) %>: <%= Setting.issues_export_limit.to_i %>
    </p>
    <% end %>
    <p class="buttons">
      <%= submit_tag l(:button_export), :name => nil, :onclick => "hideModal(this);", :data => { :disable_with => false } %>
      <%= link_to_function l(:button_cancel), "hideModal(this);" %>
    </p>
    <% end %>
  </div>
<% end %>

<%= context_menu %>

<% content_for :sidebar do %>
  <%= render :partial => 'stat_invoiced' %>
  <%= render :partial => 'stat_status' %>
  <%= render_sidebar_crm_queries('invoice') %>
  <%= call_hook(:view_invoices_sidebar_bottom, :invoices => @invoices) %>
<% end %>

<% content_for :header_tags do %>
  <%= select2_assets %>
  <%= javascript_include_tag :contacts, :plugin => 'redmine_contacts'  %>
  <%= javascript_include_tag :invoices, plugin: 'redmine_contacts_invoices' %>
  <meta name = "format-detection" content = "telephone=no">
<% end %>
